{
  "name": "framesavervideofilter",
  "version": "0.0.1-dev",
  "kurentoVersion": "^6.0.0",
  "imports": [
    {
      "name": "core",
      "version": "^6.0.0",
      "mavenVersion": "[6.0.0,7.0.0-SNAPSHOT)",
      "npmVersion": ">=6.0.0 <7.0.0"
    },
    {
      "name": "elements",
      "version": "^6.0.0",
      "mavenVersion": "[6.0.0,7.0.0-SNAPSHOT)",
      "npmVersion": ">=6.0.0 <7.0.0"
    },
    {
      "name": "filters",
      "version": "^6.0.0",
      "mavenVersion": "[6.0.0,7.0.0-SNAPSHOT)",
      "npmVersion": ">=6.0.0 <7.0.0"
    }
  ],
  "code": {
    "api": {
      "java": {
        "mavenGroupId": "org.kurento.module",
        "mavenArtifactId": "framesavervideofilter",
        "mavenVersion": "0.0.1-SNAPSHOT",
        "packageName": "org.kurento.module.framesavervideofilter"
      },
      "js": {
        "nodeName": "kurento-module-framesavervideofilter",
        "npmVersion": "0.0.1",
        "npmDescription": ""
      }
    },
    "implementation": {
      "cppNamespace": "kurento::module::framesavervideofilter",
      "lib": "libkmsframesavervideofilter"
    }
  },
  "remoteClasses": [
    {
      "name": "FrameSaverVideoFilter",
      "doc": "FrameSaverVideoFilter interface --- saves frames as PNG files.",
      "extends": "Filter",
      "constructor": {
        "params": [
          {
            "name": "mediaPipeline",
            "doc": "the :rom:cls:`MediaPipeline` parent of this element",
            "type": "MediaPipeline"
          }
        ],
        "doc": "Builder for the :rom:cls:`FrameSaverVideoFilter`."
      },
      "methods": [
        {
          "params": [],
          "return": {
            "type": "boolean",
            "doc": "FALSE when Failed."
          },
          "name": "startPipelinePlaying",
          "doc": "changes pipeline state to PLAYING"
        },
        {
          "params": [],
          "return": {
            "type": "boolean",
            "doc": "FALSE when Failed."
          },
          "name": "stopPipelinePlaying",
          "doc": "changes pipeline state from PLAYING to READY"
        },
        {
          "params": [],
          "return": {
            "type": "String",
            "doc": "names of all elements separated by tabs --- pipeline name is the first element"
          },
          "name": "getElementsNamesList",
          "doc": "gets a string of names of all elements separated by tabs."
        },
        {
          "params": [],
          "return": {
            "type": "String",
            "doc": "string of last error --- empty string when no error"
          },
          "name": "getLastError",
          "doc": "gets string of last error --- empty string when no error"
        },
        {
          "params": [],
          "return": {
            "type": "String",
            "doc": "all parameters separated by tabs --- each one is: name=value"
          },
          "name": "getParamsList",
          "doc": "gets a string of all parameters separated by tabs."
        },
        {
          "params": [
            {
              "name": "aParamName",
              "doc": "string with name of parameter.",
              "type": "String"
            }
          ],
          "return": {
            "type": "String",
            "doc": "current value of named parameter --- empty if invalid name"
          },
          "name": "getParam",
          "doc": "gets the current string value of one parameter."
        },
        {
          "params": [
            {
              "name": "aParamName",
              "doc": "string with name of parameter.",
              "type": "String"
            },
            {
              "name": "aNewParamValue",
              "doc": "string has the desired value of the parameter.",
              "type": "String"
            }
          ],
          "return": {
            "type": "boolean",
            "doc": "FALSE when Failed."
          },
          "name": "setParam",
          "doc": "sets the current string value of one parameter."
        }
      ]
    }
  ],
  "complexTypes": [],
  "events": []
}
