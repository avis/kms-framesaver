/* Autogenerated with kurento-module-creator */

#ifndef __FRAME_SAVER_VIDEO_FILTER_INTERNAL_HPP__
#define __FRAME_SAVER_VIDEO_FILTER_INTERNAL_HPP__

#include "FrameSaverVideoFilter.hpp"

namespace kurento
{
class JsonSerializer;
}

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{
namespace module
{
namespace framesavervideofilter
{

class FrameSaverVideoFilterMethodStartPipelinePlaying
{
public:
  FrameSaverVideoFilterMethodStartPipelinePlaying() {}
  ~FrameSaverVideoFilterMethodStartPipelinePlaying() {}

  bool invoke (std::shared_ptr<FrameSaverVideoFilter> obj);
  void Serialize (JsonSerializer &serializer);

};

class FrameSaverVideoFilterMethodStopPipelinePlaying
{
public:
  FrameSaverVideoFilterMethodStopPipelinePlaying() {}
  ~FrameSaverVideoFilterMethodStopPipelinePlaying() {}

  bool invoke (std::shared_ptr<FrameSaverVideoFilter> obj);
  void Serialize (JsonSerializer &serializer);

};

class FrameSaverVideoFilterMethodGetElementsNamesList
{
public:
  FrameSaverVideoFilterMethodGetElementsNamesList() {}
  ~FrameSaverVideoFilterMethodGetElementsNamesList() {}

  std::string invoke (std::shared_ptr<FrameSaverVideoFilter> obj);
  void Serialize (JsonSerializer &serializer);

};

class FrameSaverVideoFilterMethodGetLastError
{
public:
  FrameSaverVideoFilterMethodGetLastError() {}
  ~FrameSaverVideoFilterMethodGetLastError() {}

  std::string invoke (std::shared_ptr<FrameSaverVideoFilter> obj);
  void Serialize (JsonSerializer &serializer);

};

class FrameSaverVideoFilterMethodGetParamsList
{
public:
  FrameSaverVideoFilterMethodGetParamsList() {}
  ~FrameSaverVideoFilterMethodGetParamsList() {}

  std::string invoke (std::shared_ptr<FrameSaverVideoFilter> obj);
  void Serialize (JsonSerializer &serializer);

};

class FrameSaverVideoFilterMethodGetParam
{
public:
  FrameSaverVideoFilterMethodGetParam() {}
  ~FrameSaverVideoFilterMethodGetParam() {}

  std::string invoke (std::shared_ptr<FrameSaverVideoFilter> obj);
  void Serialize (JsonSerializer &serializer);

  std::string getAParamName () {
    return aParamName;
  }

  void setAParamName (const std::string &aParamName) {
    this->aParamName = aParamName;
  }

private:
  std::string aParamName;
};

class FrameSaverVideoFilterMethodSetParam
{
public:
  FrameSaverVideoFilterMethodSetParam() {}
  ~FrameSaverVideoFilterMethodSetParam() {}

  bool invoke (std::shared_ptr<FrameSaverVideoFilter> obj);
  void Serialize (JsonSerializer &serializer);

  std::string getAParamName () {
    return aParamName;
  }

  void setAParamName (const std::string &aParamName) {
    this->aParamName = aParamName;
  }

  std::string getANewParamValue () {
    return aNewParamValue;
  }

  void setANewParamValue (const std::string &aNewParamValue) {
    this->aNewParamValue = aNewParamValue;
  }

private:
  std::string aParamName;
  std::string aNewParamValue;
};

class FrameSaverVideoFilterConstructor
{
public:
  FrameSaverVideoFilterConstructor () {}
  ~FrameSaverVideoFilterConstructor () {}

  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<MediaPipeline> getMediaPipeline ();

  void setMediaPipeline (std::shared_ptr<MediaPipeline> mediaPipeline) {
    this->mediaPipeline = mediaPipeline;
  }

private:
  std::shared_ptr<MediaPipeline> mediaPipeline;
};

} /* framesavervideofilter */
} /* module */
} /* kurento */

#endif /*  __FRAME_SAVER_VIDEO_FILTER_INTERNAL_HPP__ */
