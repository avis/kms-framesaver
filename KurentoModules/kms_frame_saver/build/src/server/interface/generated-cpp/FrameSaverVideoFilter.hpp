/* Autogenerated with kurento-module-creator */

#ifndef __FRAME_SAVER_VIDEO_FILTER_HPP__
#define __FRAME_SAVER_VIDEO_FILTER_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <vector>
#include "Filter.hpp"

namespace kurento
{
namespace module
{
namespace framesavervideofilter
{
class FrameSaverVideoFilter;
} /* framesavervideofilter */
} /* module */
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::module::framesavervideofilter::FrameSaverVideoFilter> &object, JsonSerializer &serializer);
}

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{
namespace module
{
namespace framesavervideofilter
{
class FrameSaverVideoFilter : public virtual Filter
{

public:
  FrameSaverVideoFilter () {};
  virtual ~FrameSaverVideoFilter () {};

  virtual bool startPipelinePlaying () = 0;
  virtual bool stopPipelinePlaying () = 0;
  virtual std::string getElementsNamesList () = 0;
  virtual std::string getLastError () = 0;
  virtual std::string getParamsList () = 0;
  virtual std::string getParam (const std::string &aParamName) = 0;
  virtual bool setParam (const std::string &aParamName, const std::string &aNewParamValue) = 0;

  virtual const std::string& getType () const;
  virtual const std::string& getQualifiedType () const;
  virtual const std::string& getModule () const;
  virtual const std::vector<std::string>& getHierarchy () const;

  virtual void Serialize (JsonSerializer &serializer) = 0;

};

} /* framesavervideofilter */
} /* module */
} /* kurento */

#endif /*  __FRAME_SAVER_VIDEO_FILTER_HPP__ */
